% Author: Alana Gudinas
% July 18, 2018
%
% [NestedContoursCell, xdataC, ydataC, heightVec] = NestedContours(ImUniBg,meanPix)
%
% This function organizes contour data in groups of "nested contours", or
% contours that lie within one another. One of the ouptputs,
% "NestedContoursCell" is a cell array with two rows, the top representing
% the x-coordinates, and the bottom representing the y-coordinates. Each
% column of the cell array is a contour "group". Thus, to plot for
% example NestedContoursCell{1,1} vs NestedContoursCell{2,1} would plot all
% of the contours in the column one of the cell array, all of which are
% nested within one another.
%
% The input is a heavily processed image (ImUniBg), the output of
% UNIFORMBACKGROUND, and the outputs are: a cell array (NestedContoursCell)
% containing the coordinates of all the nested contours, (dataC) matrices
% of the x and y coordinates of all the contours, and (heightVec) a vector
% of all the "heights" of the contour coordinates. The heights correspond
% to pixel brightness levels generated by MATLAB's "imcontour."
%
%------------------------------------------------------------------------------------%


function [NestedContoursCell, xdataC, ydataC, heightVec] = NestedContours(ImUniBg,meanPix)

meanP = mean(ImUniBg(:));
global hMethod 
global metaDataFile

fileID = fopen(metaDataFile,'a+');
formatSpec = 'Defects of interest: %s\n';

str = 'Are you interested in first identifying bright or dark defects? Type "B" for bright defects, and "D" for dark defects.';
promptdef = {str};
titleBox = 'Defect Brightness Selection';
dims = [1 60];
definput = {'B'};
defAns = inputdlg(promptdef,titleBox,dims,definput);
defAns = defAns{1};


if strcmp(defAns,'B')
    Method = 'Bright';
    hMethod = 1;
elseif strcmp(defAns,'D')
    Method = 'Dark';
    hMethod = 0;
end

fprintf(fileID,formatSpec,Method);

% Generate contour data
[ C, hdata, idx, vtx, xdata, ydata, heightVec ] = ContourData(ImUniBg,Method,meanPix);

xdataC = xdata;
ydataC = ydata;
nd = length(xdata(1,:));
k = 1;
NestC = [];

% Contour data is arranged in order from lowest to highest brightness
% levels. The indexing order depends on interest in either bright or dark
% defects.

if hMethod
    idxVec = [1:1:nd];
else
    idxVec = [nd:-1:1];
end

for i = idxVec
    if ~all(isnan(xdata(:,i)))
        NestC{1,k} = [xdata(:,i)];
        NestC{2,k} = [ydata(:,i)];
        Xmax = max(xdata(:,i));
        Xmin = min(xdata(:,i));
        Ymax = max(ydata(:,i));
        Ymin = min(ydata(:,i));
        for j = 1:nd
            if j ~= i
                xmax = max(xdata(:,j));
                xmin = min(xdata(:,j));
                ymax = max(ydata(:,j));
                ymin = min(ydata(:,j)); % If the coordinates of a contour plot falls within another, store them in the same cell.
                if ((Xmax > xmax) & (Xmin < xmin)) & ((Ymax > ymax) & (Ymin < ymin)) % then the ith contour is nested inside the jth contour
                    xC = xdata(:,j);
                    yC = ydata(:,j);
                    NestC{1,k} = [ NestC{1,k} , xC ];
                    NestC{2,k} = [ NestC{2,k} , yC ];
                    xdata(:,j) = NaN(length(xdata(:,1)),1);
                    ydata(:,j) = NaN(length(ydata(:,1)),1);        
                end  
            end
        end
        k = k + 1;
    end
end

NestedContoursCell = NestC;

end
                        
                    
        
